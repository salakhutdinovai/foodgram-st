version: '3.8'

services:
  backend:
    container_name: foodgram-backend
    build:
      context: ../backend
      dockerfile: ../infra/Dockerfile
    volumes:
      - ../backend:/app
      - static_volume:/app/static
      - media_volume:/app/media
    environment:
      - DATABASE_URL=postgresql://postgres:8091@host.docker.internal:5432/foodgram
      - SECRET_KEY=django-insecure-vfmvweu9g^m)%*1pqn$tth0ge5k6d_=4z)vb+)@z-7k!1%x_56
      - ALLOWED_HOSTS=localhost,127.0.0.1,foodgram.example.org
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://foodgram.example.org,http://localhost
    restart: always
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn --bind 0.0.0.0:8000 foodgram.wsgi:application"

  frontend:
    container_name: foodgram-front
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend/build:/usr/share/nginx/html
      - static_volume:/usr/share/nginx/html/static
      - media_volume:/usr/share/nginx/html/media
    restart: always
    command: >
      sh -c "cp -r build/* /usr/share/nginx/html/ && tail -f /dev/null"

  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_volume:/usr/share/nginx/html/static
      - media_volume:/usr/share/nginx/html/media
    depends_on:
      - backend
      - frontend
    restart: always

volumes:
  static_volume:
  media_volume: